#!/usr/bin/env python
PACKAGE = "iai_image_logging_msgs"

#import iai_image_logging_msgs.cfg.CompressedConfig as comp_conf
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
#config = comp_conf.defaults
gen.add("topic",        str_t,    0, "Topic",           "/camera/rgb/image_raw/compressed"            )
format_enum = gen.enum([gen.const("jpeg",   str_t,"jpeg","JPEG compression"),
                        gen.const("png",    str_t,"png","PNG compression")], "Format Enum")

gen.add("format",       str_t,    0, "Format Enumeration", "jpeg",edit_method=format_enum     )
gen.add("jpeg_quality", int_t,    0, "JPEG quality",    80,     1,      100                 )
gen.add("png_level",    int_t,    0, "PNG level",       9,      1,      9                   )
gen.add("db_host",      str_t,    0, "Database host",   "localhost"                         )
gen.add("collection",   str_t,    0, "Collection",      "db.image_color_compressed_cfg"     )

optimization_enum = gen.enum([gen.const("Bitrate",   int_t, 0,"Bitrate"),
                        gen.const("Quality",    int_t,1,"Quality")], "Optimization Enum")

gen.add("optimize_for",       int_t,    0, "Optimization Enumeration", 0,edit_method=optimization_enum     )
gen.add("target_bitrate", int_t,    0, "Target Bitrate",    800000,    0 ,      99200000                 )
gen.add("keyframe_frequency",       int_t,    0, "Keyframe Frequency", 64,1 , 64    )
gen.add("quality",       int_t,    0, "Quality", 31,0 , 63    )
gen.add("mode",         int_t,       0, "Mode", 1, 0, 4)

exit(gen.generate(PACKAGE, "iai_image_logging_msgs", "Main"))
